{"version":3,"sources":["components/Profile.jsx","components/Input.jsx","App.js","reportWebVitals.js","index.js"],"names":["Profile","thing","id","style","listStyle","fontSize","useState","profile","setProfile","error","setError","useEffect","axios","get","then","res","data","catch","err","message","img","name","hair_color","eye_color","skin_color","height","terrain","climate","diameter","gravity","manufacturer","model","hyperdrive_rating","passengers","Input","setId","setThing","updateSearch","onSubmit","htmlFor","value","onChange","e","target","disabled","width","type","App","className","preventDefault","navigate","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAiDeA,EA9CC,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAEfC,EAAQ,CACVC,UAAW,OACXC,SAAU,SAGd,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAUA,OARAC,qBAAU,WACNC,IAAMC,IAAN,gCAAmCZ,EAAnC,YAA4CC,IACvCY,MAAK,SAAAC,GAAG,OAAIP,EAAWO,EAAIC,SAC3BC,OAAM,SAAAC,GAAG,OAAIR,EAAS,CACnBS,QAAS,+CACTC,IAAK,UACd,CAACnB,EAAOC,IAGP,qCACI,6BAAKK,EAAQc,OACF,WAAVpB,EACG,qBAAIE,MAAOA,EAAX,UACI,+CAAkBI,EAAQe,cAC1B,8CAAiBf,EAAQgB,aACzB,+CAAkBhB,EAAQiB,cAC1B,2CAAcjB,EAAQkB,OAAtB,WACIhB,EAAMU,QACP,YAAVlB,EACG,qBAAIE,MAAOA,EAAX,UACI,4CAAeI,EAAQmB,WACvB,4CAAenB,EAAQoB,WACvB,6CAAgBpB,EAAQqB,SAAxB,QACA,4CAAerB,EAAQsB,cACnBpB,EAAMU,QACP,cAAVlB,EACG,qBAAIE,MAAOA,EAAX,UACI,iDAAoBI,EAAQuB,gBAC5B,0CAAavB,EAAQwB,SACrB,sDAAyBxB,EAAQyB,qBACjC,uDAA0BzB,EAAQ0B,iBAC9BxB,EAAMU,YCtBfe,EApBD,SAAC,GAAkD,IAAhDhC,EAA+C,EAA/CA,GAAIiC,EAA2C,EAA3CA,MAAOlC,EAAoC,EAApCA,MAAOmC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAKzC,OACI,uBAAMC,SAAUD,EAAhB,UACI,uBAAOE,QAAQ,QAAf,0BACA,yBAAQlB,KAAK,QAAQnB,GAAG,QAAQsC,MAAOvC,EAAOwC,SAAU,SAAAC,GAAC,OAAIN,EAASM,EAAEC,OAAOH,QAA/E,UACI,wBAAQA,MAAM,GAAGI,UAAQ,EAAzB,qCACA,wBAAQJ,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,YAAd,0BANR,MAOgB,uBAAOD,QAAQ,KAAf,kBACZ,uBAAOpC,MAbD,CACV0C,MAAO,QAYkBC,KAAK,OAAOzB,KAAK,KAAKnB,GAAG,KAAKsC,MAAOtC,EAAIuC,SAAU,SAAAC,GAAC,OAAIP,EAAMO,EAAEC,OAAOH,UAC5F,gD,OCQGO,MAnBf,WAEI,MAAoBzC,mBAAS,IAA7B,mBAAOJ,EAAP,KAAWiC,EAAX,KACA,EAA0B7B,mBAAS,IAAnC,mBAAOL,EAAP,KAAcmC,EAAd,KAQA,OAAO,sBAAKY,UAAU,MAAf,UACH,cAAC,EAAD,CAAO9C,GAAIA,EAAIiC,MAAOA,EAAOlC,MAAOA,EAAOmC,SAAUA,EAAUC,aAP9C,SAAAK,GACjBA,EAAEO,iBACFC,YAAS,IAAD,OAAKjD,EAAL,YAAcC,IACtBiC,EAAM,OAKN,cAAC,IAAD,UACI,cAAC,EAAD,CAASgB,KAAK,sBCRXC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxC,MAAK,YAAkD,IAA/CyC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a1a0ca0a.chunk.js","sourcesContent":["import React, {useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Profile = ({thing, id}) => {\n\n    const style = {\n        listStyle: \"none\",\n        fontSize: \"large\",\n    }\n\n    const [profile, setProfile] = useState({});\n    const [error, setError] = useState({});\n\n    useEffect(() => {\n        axios.get(`https://swapi.dev/api/${thing}/${id}`)\n            .then(res => setProfile(res.data))\n            .catch(err => setError({\n                message: \"These are not the droids you're looking for.\",\n                img: \"\"}))\n    }, [thing, id])\n\n    return (\n        <>\n            <h1>{profile.name}</h1>\n            {thing === \"people\" ?\n                <ul style={style}>\n                    <li>Hair Color:: {profile.hair_color}</li>\n                    <li>Eye Color:: {profile.eye_color}</li>\n                    <li>Skin Color:: {profile.skin_color}</li>\n                    <li>Height:: {profile.height}cm</li>\n                </ul> : error.message}\n            {thing === \"planets\" ?\n                <ul style={style}>\n                    <li>Terrain:: {profile.terrain}</li>\n                    <li>Climate:: {profile.climate}</li>\n                    <li>Diameter:: {profile.diameter}km</li>\n                    <li>Gravity:: {profile.gravity}</li>\n                </ul> : error.message}\n            {thing === \"starships\" ?\n                <ul style={style}>\n                    <li>Manufacturer:: {profile.manufacturer}</li>\n                    <li>Model:: {profile.model}</li>\n                    <li>Hyperdrive Rating:: {profile.hyperdrive_rating}</li>\n                    <li>Passenger Capacity:: {profile.passengers}</li>\n                </ul> : error.message}\n        </>\n    );\n}\n\nexport default Profile;","import React from \"react\"\n\nconst Input = ({ id, setId, thing, setThing, updateSearch }) => {\n    const style = {\n        width: \"50px\"\n    }\n\n    return (\n        <form onSubmit={updateSearch}>\n            <label htmlFor=\"thing\">Search for: </label>\n            <select name=\"thing\" id=\"thing\" value={thing} onChange={e => setThing(e.target.value)} >\n                <option value=\"\" disabled>Please select an option</option>\n                <option value=\"people\">People</option>\n                <option value=\"planets\" >Planets</option>\n                <option value=\"starships\" >Starships</option>\n            </select> | <label htmlFor=\"id\">ID: </label>\n            <input style={style} type=\"text\" name=\"id\" id=\"id\" value={id} onChange={e => setId(e.target.value)}/>\n            <button>Search</button>\n        </form>\n    );\n}\n\nexport default Input;","import \"./App.css\";\nimport Profile from \"./components/Profile\";\nimport Input from \"./components/Input\";\nimport { Router, navigate } from \"@reach/router\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n\n    const [id, setId] = useState(\"\");\n    const [thing, setThing] = useState(\"\");\n\n    const updateSearch = e => {\n        e.preventDefault();\n        navigate(`/${thing}/${id}`);\n        setId(\"\");\n    }\n\n    return <div className=\"App\">\n        <Input id={id} setId={setId} thing={thing} setThing={setThing} updateSearch={updateSearch}/>\n        <Router>\n            <Profile path=\"/:thing/:id\" />\n        </Router>\n    </div>;\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}